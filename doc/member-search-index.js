memberSearchIndex = [{"p":"com.parkit.parkingsystem.constants","c":"ParkingType","l":"BIKE"},{"p":"com.parkit.parkingsystem.constants","c":"Fare","l":"BIKE_RATE_PER_HOUR"},{"p":"com.parkit.parkingsystem.service","c":"FareCalculatorService","l":"calculateFare(Ticket)","url":"calculateFare(com.parkit.parkingsystem.model.Ticket)"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeRegularUser()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithDifferentHours(int)"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithFutureInTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithLessThanOneHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareBikeWithMoreThanADayParkingTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareCarRegularUser()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareCarwithDifferentHours(int)"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithFutureInTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithLessThanOneHourParkingTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareCarWithMoreThanADayParkingTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFareNullType()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFreeFareBikeWithLessThanThirtyMinutesParkingTime()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"calculateFreeFareCarWithLessThanThirtyMinutesParkingTime()"},{"p":"com.parkit.parkingsystem.constants","c":"ParkingType","l":"CAR"},{"p":"com.parkit.parkingsystem.constants","c":"Fare","l":"CAR_RATE_PER_HOUR"},{"p":"com.parkit.parkingsystem.integration.service","c":"DataBasePrepareService","l":"clearDataBaseEntries()"},{"p":"com.parkit.parkingsystem.config","c":"DataBaseConfig","l":"closeConnection(Connection)","url":"closeConnection(java.sql.Connection)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closeConnection(Connection)","url":"closeConnection(java.sql.Connection)"},{"p":"com.parkit.parkingsystem.config","c":"DataBaseConfig","l":"closePreparedStatement(PreparedStatement)","url":"closePreparedStatement(java.sql.PreparedStatement)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closePreparedStatement(PreparedStatement)","url":"closePreparedStatement(java.sql.PreparedStatement)"},{"p":"com.parkit.parkingsystem.config","c":"DataBaseConfig","l":"closeResultSet(ResultSet)","url":"closeResultSet(java.sql.ResultSet)"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"closeResultSet(ResultSet)","url":"closeResultSet(java.sql.ResultSet)"},{"p":"com.parkit.parkingsystem.dao","c":"ParkingSpotDAO","l":"dataBaseConfig"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"dataBaseConfig"},{"p":"com.parkit.parkingsystem.config","c":"DataBaseConfig","l":"DataBaseConfig()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.integration.service","c":"DataBasePrepareService","l":"DataBasePrepareService()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"DataBaseTestConfig()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"DBConstants()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"DBConstantsTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.parkit.parkingsystem.constants","c":"Fare","l":"Fare()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.service","c":"FareCalculatorService","l":"FareCalculatorService()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"FareCalculatorServiceTest","l":"FareCalculatorServiceTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"FareTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.constants","c":"Fare","l":"FREE_BIKE_RATE_PER_HOUR"},{"p":"com.parkit.parkingsystem.constants","c":"Fare","l":"FREE_CAR_RATE_PER_HOUR"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"GET_NEXT_PARKING_SPOT"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"GET_RECURRENT_USER"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"GET_TICKET"},{"p":"com.parkit.parkingsystem.config","c":"DataBaseConfig","l":"getConnection()"},{"p":"com.parkit.parkingsystem.integration.config","c":"DataBaseTestConfig","l":"getConnection()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"getId()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getId()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getInTime()"},{"p":"com.parkit.parkingsystem.dao","c":"ParkingSpotDAO","l":"getNextAvailableSlot(ParkingType)","url":"getNextAvailableSlot(com.parkit.parkingsystem.constants.ParkingType)"},{"p":"com.parkit.parkingsystem.service","c":"ParkingService","l":"getNextParkingNumberIfAvailable()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getOutTime()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getParkingSpot()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"getParkingType()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getPrice()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getRecurrentUser()"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"getTicket(String)","url":"getTicket(java.lang.String)"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"getVehichleTypeWithIncorrectInputShouldReturnAnExceptionForGettingTheNextAvailableSpot()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"getVehichleTypeWithIncorrectInputShouldReturnAnExceptionToGetType()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"getVehicleRegNumber()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"hashCode()"},{"p":"com.parkit.parkingsystem.util","c":"InputReaderUtil","l":"InputReaderUtil()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.service","c":"InteractiveShell","l":"InteractiveShell()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"InteractiveShellTest","l":"InteractiveShellTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"isAvailable()"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"isRecurrentUser(String)","url":"isRecurrentUser(java.lang.String)"},{"p":"com.parkit.parkingsystem.service","c":"InteractiveShell","l":"loadInterface()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"InteractiveShellTest","l":"loadInterfaceAnsWerTest()"},{"p":"com.parkit.parkingsystem.integration","c":"ParkingDataBaseIT","l":"ParkingDataBaseIT()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.service","c":"ParkingService","l":"ParkingService(InputReaderUtil, ParkingSpotDAO, TicketDAO)","url":"%3Cinit%3E(com.parkit.parkingsystem.util.InputReaderUtil,com.parkit.parkingsystem.dao.ParkingSpotDAO,com.parkit.parkingsystem.dao.TicketDAO)"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"ParkingServiceTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"ParkingSpot(int, ParkingType, boolean)","url":"%3Cinit%3E(int,com.parkit.parkingsystem.constants.ParkingType,boolean)"},{"p":"com.parkit.parkingsystem.dao","c":"ParkingSpotDAO","l":"ParkingSpotDAO()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"ParkingSpotTest","l":"ParkingSpotTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.service","c":"ParkingService","l":"processExitingVehicle()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"processExitingVehicleTest()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"processIncomingBikeTest()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"processIncomingCarTest()"},{"p":"com.parkit.parkingsystem.service","c":"ParkingService","l":"processIncomingVehicle()"},{"p":"com.parkit.parkingsystem.util","c":"InputReaderUtil","l":"readSelection()"},{"p":"com.parkit.parkingsystem.util","c":"InputReaderUtil","l":"readVehicleRegistrationNumber()"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"SAVE_TICKET"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"saveTicket(Ticket)","url":"saveTicket(com.parkit.parkingsystem.model.Ticket)"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"setAvailable(boolean)"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"setId(int)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setId(int)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setInTime(Date)","url":"setInTime(java.util.Date)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setOutTime(Date)","url":"setOutTime(java.util.Date)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setParkingSpot(ParkingSpot)","url":"setParkingSpot(com.parkit.parkingsystem.model.ParkingSpot)"},{"p":"com.parkit.parkingsystem.model","c":"ParkingSpot","l":"setParkingType(ParkingType)","url":"setParkingType(com.parkit.parkingsystem.constants.ParkingType)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setPrice(double)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setRecurrentUser(boolean)"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"setVehicleRegNumber(String)","url":"setVehicleRegNumber(java.lang.String)"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"ParkingSpotTest","l":"testBikeParkingSpot()"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"ParkingSpotTest","l":"testCarParkingSpot()"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"ParkingSpotTest","l":"testHashMethod()"},{"p":"com.parkit.parkingsystem.integration","c":"ParkingDataBaseIT","l":"testParkingACar()"},{"p":"com.parkit.parkingsystem.integration","c":"ParkingDataBaseIT","l":"testParkingLotExit()"},{"p":"com.parkit.parkingsystem.integration","c":"ParkingDataBaseIT","l":"testRecurentUserExiting_false()"},{"p":"com.parkit.parkingsystem.integration","c":"ParkingDataBaseIT","l":"testRecurentUserExiting_true()"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"TicketTest","l":"testTicket()"},{"p":"com.parkit.parkingsystem.unitaires.service","c":"ParkingServiceTest","l":"testToVerifyTheCorrectExceptionIfTheParkingIsFull()"},{"p":"com.parkit.parkingsystem.model","c":"Ticket","l":"Ticket()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"TicketDAO()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.unitaires.model","c":"TicketTest","l":"TicketTest()","url":"%3Cinit%3E()"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"UPDATE_PARKING_SPOT"},{"p":"com.parkit.parkingsystem.constants","c":"DBConstants","l":"UPDATE_TICKET2"},{"p":"com.parkit.parkingsystem.dao","c":"ParkingSpotDAO","l":"updateParking(ParkingSpot)","url":"updateParking(com.parkit.parkingsystem.model.ParkingSpot)"},{"p":"com.parkit.parkingsystem.dao","c":"TicketDAO","l":"updateTicket(Ticket)","url":"updateTicket(com.parkit.parkingsystem.model.Ticket)"},{"p":"com.parkit.parkingsystem.constants","c":"ParkingType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.parkit.parkingsystem.constants","c":"ParkingType","l":"values()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForGetNextParkingSlotRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForGetRecurentUserRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForGetTicketRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForSaveTicketRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForUpdateParkingRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"DBConstantsTest","l":"VerifyDBConstantAreSetCorrectlyForUpdateTicketRequest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"VerifyFareAreSetCorretlyForABikeTest(int)"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"VerifyFareAreSetCorretlyForACarTest(int)"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"verifyFareConstantArePublicStaticFinalTest()"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"VerifyFreeFareAreSetCorretlyForABikeTest(int)"},{"p":"com.parkit.parkingsystem.unitaires.constants","c":"FareTest","l":"VerifyFreeFareAreSetCorretlyForACarTest(int)"}]